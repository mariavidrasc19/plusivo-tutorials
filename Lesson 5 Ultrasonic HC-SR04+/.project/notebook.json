[{"id":"941c6dea-7643-43fc-bab9-4e1559034f4c","type":"markdown","editable":false,"data":"# Lesson 5: Ultrasonic HC-SR04+\n## 5.1 Overview\nIn this lesson you will learn how to use the ultrasonic module in order to\ncalculate the distance from 2 centimeters and up to 4 meters.\n\n## 5.2 Components required\n\n* Development board\n* Ultrasonic module HC-SR04+\n* Breadboard 830p\n* 4 x male-to-male jumper wires\n* Micro USB – Type A USB cable\n\n","code":"","error":"","result":""},{"id":"e226e38a-c741-446b-8446-16809a103a04","type":"markdown","editable":false,"data":"## 5.3 Components introduction\n\n### Ultrasonic HC SR04+\nThe ultrasonic module consists of an ultrasonic transmitter and an ultrasonic\nreceiver.\n\n#TODO img utltrasonic 57\n\nThe transmitter is used to generate an ultrasonic sound at about 40 kHz.\nWhen there is an object in front of the transmitter, the ultrasound is bounced back to\nthe receiver. Knowing the speed of sound, we can calculate the distance to that object\nwith an accuracy of up to 3mm.\n\nBelow, you can learn how to calculate the distance using the speed of sound.\n\n\n1. Transmitter emits an ultrasonic sound for about 10 microseconds. 1\nmicrosecond (1μs) is equally to 10s) is equally to 10-6 seconds (0.000001 seconds).\n2. If there is an object, the ultrasonic sound is bounced back to the sensor,\nwhere the receiver is listening. \n3. Now, we have to record the time it takes the sound to travel from the\ntransmitter to object and back to the receiver.\n4. Using the speed of sound (0.034 cm/μs) is equally to 10s), you can calculate the distance using\nthe following formula:\nd=t⋅v/2\n\nwhere:\n\n* **d** represents the distance in centimeters\n* **t** represents the time passed for the sound to return to the receiver\n* **v** represents the speed of sound (0.034 cm/μs) is equally to 10s)\n\nThis ultrasonic module can work with voltages between 3V and 5.5V and has\na small operating current (3 mA).\n\n## 5.4 Connections\n\nBelow you can see the schematic:\n\nNext you will find the visual representation:\n\n#TODO imgs pg 59\n","code":"","error":"","result":""},{"id":"ba7a8443-656d-4649-87e5-07a48548bf40","type":"markdown","editable":false,"data":"## 5.5 Code\n\nThe code begins with the declaration of the pins used by the ultrasonic\nmodule, echo and trigger. Also, we will need two variables, duration and distance,\nto calculate the distance. These two variables will help us later.\n\n*First step is to import the libraries.* \nThe first line imports from the \"machine\" module the \"Pin\". It will create an Pin object.\nThe second line import the \"machine\" module.\nThe third an the fourth lines import the \"time\" and \"utime\" modules. \"utime\" is an library used for getting the current time and date\nand it measuring time intervals, delays.\n\nMore informations about \"utime\":\n* https://docs.micropython.org/en/latest/library/utime.html","code":"","error":"","result":""},{"id":"155ce2fd-e428-4426-8651-5ca2e33ace66","type":"python","editable":false,"data":"#Ultrasonic HC-SR04+\n\nfrom machine import Pin\nimport machine\nimport time\nimport utime ","code":"","error":"","result":""},{"id":"cc98ed48-e1d9-42dd-a7e7-320ebd100e86","type":"markdown","editable":false,"data":"Next step is to set the trigger pin as OUTPUT and the\r\necho pin as INPUT. \r\n\r\nTrig is the input to trigger module to send ultrasonic waves\r\n\r\nEcho is the the output received representing the reflection of waves\r\n","code":"","error":"","result":""},{"id":"e80b9591-5517-4a2b-8fdb-bd4ee27ecf9b","type":"python","editable":false,"data":"#the trigger pin (transmitter) must be set as OUTPUT\r\ntrig_pin = Pin(0, Pin.OUT)","code":"","error":"","result":""},{"id":"3f1fee87-b354-45e8-9fc7-046084b5b947","type":"python","editable":false,"data":"#the echo pin (receiver) must be set as INPUT\r\necho_pin = Pin(14,  Pin.IN)","code":"","error":"","result":""},{"id":"8611e206-6db5-4455-a2a1-d92681eb7843","type":"markdown","editable":true,"data":"The loop starts by setting the trigger pin to LOW, in order to\r\nprepare for a reading, and set a delay of 2 microseconds.\r\nIn order to calculate the distance, we need the time that the sound travels\r\nfrom the transmitter to object and back to the receiver. For that, we have to generate\r\nan ultrasound by turning the transmitter ON for 10 microseconds (1 microsecond =\r\n10-6 seconds) then record the sound wave travel time using the following instruction:\r\n\r\n* time = machine.time_pulse_us(pin, pulse_level, timeout_us=1000000, /)\r\n\r\nwhere:\r\n\r\n* **pin** - represents the number of the pin on which we want to read\r\nthe pulse\r\n* **pulse_level** - should be 0 to time a low pulse or 1 to time a high pulse\r\n* **timeout_us** - timeout is optional (time for the pulse have to wait for begin)\r\n\r\nNow that you have the duration of the pulse, you can calculate the distance\r\nusing the following formula:\r\n\r\nd=t⋅v/2\r\n\r\nwhere:\r\n* d – represents the distance in centimeters;\r\n* t – represents the duration of the pulse;\r\n* v – represents the speed of sound in air (about 0.034 cm/μs) is equally to 10s).\r\n\r\nDo not forget to divide the result by 2 as the sound has to travel the same\r\ndistance twice (forwards and bounce backwards).\r\n\r\nAfter calculating the distance, we will display it using print() and String format() method.\r\n","code":"","error":"","result":""},{"id":"f6e1f0cc-9a92-40dc-8835-80c77fccba65","type":"python","editable":false,"data":"while True:\r\n    #set the trigPin to LOW(0) in order to prepare for the next reading\r\n    trig_pin.value(0)\r\n    #delay for 2 microseconds\r\n    utime.sleep_us(2)\r\n    \r\n    #generate an ultrasound for 10 microseconds then turn off the transmitter\r\n    trig_pin.value(1)\r\n    utime.sleep_us(10)\r\n    trigg_pin.value(0)\r\n\r\n#find the time using machine.time_pulse_us(pin, pulse_level, timeout_us)\r\n#Time a pulse on the given pin, and return the duration of the pulse in microsecond\r\n#\r\n\r\n    time = machine.time_pulse_us(echo_pin, 1)\r\n\r\n#the formula for distance d = t*v/2\r\n#v represents the speed of sound in air (about 0.034 cm/μs)\r\n#t is the time, the duration of the pulse\r\n    distance=(time*0.034)/2\r\n\r\n    print(\"The distance is {} cm\".format(distance))","code":"","error":"","result":""}]