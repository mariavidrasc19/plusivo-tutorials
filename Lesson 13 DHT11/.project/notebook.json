[{"id":"d47702dd-7582-4394-a780-e4811f121ee2","type":"markdown","editable":false,"data":"# Lesson 13: DHT11\n## 13.1 Overview\nIn this lesson you will learn how to use a DHT11 Temperature and Humidity\nSensor to check the temperature and humidity in a room.\n\n## 13.2 Components required\n\n* Development board\n* Micro USB – Type A USB cable\n* DHT11 Humidity and Temperature sensor\n* Breadboard 830p\n* 1 x 5000 Ω resistor\n* 4 x male-to-male jumper wires\n\n## 13.3 Component Introduction\n### DHT11\n\nDHT11 features a temperature and humidity sensor with a calibrated digital\nsignal output. The DHT11 detects water vapor by measuring the electrical resistance\nbetween two electrods.\nThere are two types of a DHT11 sensor that you may come across. One with\nthree pins and a 10k resistor included, or the one included in this kit that does not\nhave a pull up resistor inside it and has 4 pins.\n\n#TODO img pg 106\n\nThe humidity sensing component is a moisture holding substrate with\nelectrodes applied to the surface. When water vapor is absorbed by the substrate,\nions are released by the substrate which increases the conductivity between the\nelectrodes. The change in resistance between the two electrodes is proportional to the relative humidity.\n\nHere is a graph to show you what this means:\n\n#TODO img graph pg 107\n\nTo read the temperature the sensor uses a thermistor. A thermistor is a doped\nsemiconductor. Semiconductors resistance drops with a rise in temperature as\nopposed to conductors (whose resistance rises with a rise in temperature).\n\nSo basically the DHT11, to read the temperature, reads the resistance of the\nthermistor. The steeper slope at lower temperatures of the thermistor means that you\ncan calculate the resistance with better accuracy and hence the temperature will be\nmore accurate.\n\n## 13.4 Connections\n\nBelow, you can find the schematic:\n\n#TODO img pg107\n\nBelow, you can find a visual representation of the connections:\n\n## 13.5 Code\n\nFirst step is to import the libraries. On the third line we will import \"dht\" library for creating andht object.\n\nMore informations:\n\n* https://docs.micropython.org/en/latest/esp8266/tutorial/dht.html\n\n#TODO img pg107\n","code":"","error":"","result":""},{"id":"84f9bced-b8db-4c5a-8b16-cfb8f418e18f","type":"python","editable":false,"data":"from machine import Pin\r\nfrom time import sleep\r\nimport dht","code":"","error":"","result":""},{"id":"7b8ca4bc-f3d5-4c5a-b838-ff1f7189410d","type":"markdown","editable":false,"data":"Next step is to create the dht object which is connected to the Pin 14.","code":"","error":"","result":""},{"id":"99a2a6ca-510d-43da-b87b-cdc78070eee7","type":"python","editable":false,"data":"dht_obj = dht.DHT11(Pin(13))","code":"","error":"","result":""},{"id":"b559d395-1f04-4a98-8b6d-d02d5eb50627","type":"markdown","editable":false,"data":"In loop we will use the *try* and *except* block which is used to catch and handle exceptions.\nUsing the function measure() we read the values from the\nmodule. We will use two variables temp and hum for storing the temperature and the humidity. We will put the program to sleep for one second, that means at each second\nthe dht will do another measurement.","code":"","error":"","result":""},{"id":"31e1ac51-ca49-442d-b129-7467ead43966","type":"python","editable":false,"data":"while True:\r\n    \r\n    try:\r\n        dht_obj.measure()\r\n        sleep(0.02)\r\n        temp = dht_obj.temperature()\r\n        hum = dht_obj.humidity()\r\n        print(\"tempereature is : \",temp)\r\n        print(\"humidity is : \",hum)\r\n        sleep(1)\r\n    except OSError as e:\r\n        print(\"Failed to read dht value\")","code":"","error":"","result":""}]