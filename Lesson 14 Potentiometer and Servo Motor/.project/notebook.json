[{"id":"dfeb482e-5ae5-40a1-8750-0c2305973db4","type":"markdown","editable":false,"data":"# Lesson 14: Potentiometer and Servo Motor\n\n\n## Overview\n\nIn this lesson you are going to learn how to use a potentiometer to control a servo.\n\n\n## Components required\n\n\n* Development board;\n* Micro USB â€“ Type A USB cable; \n* 10k ohms Potentiometer;\n* Servo SG90;\n* 9 x male-to-male jumper wires;\n* Breadboard power supply;\n* Breadboard 830p;\n* 9 V battery;\n* Cable 9 V battery to DC jack\n\n\n## Components introduction\n\n### Potentiometer\nIn the past lessons, you learned what a resistor is. A potentiometer is pretty\nsimilar to a resistor, the main difference is that the resistor has a fixed resistance,\nwhereas a potentiometer can change its resistance (it is a variable resistor).\nBelow, you can see how a generic potentiometer looks like.\n\n\n``` photo ```(photo)\n\nHow it works:\n* the resistance measured between A and C is always 10k ohms, no matter if\nyou turn the rod or not;\n* when you turn the rod clockwise, the resistance between A and B increases\n(from 0 to 10k) and the resistance between B and C decreases (from 10k to 0).\n* when you turn the rod counter clockwise, the resistance between A and B\ndecreases (from 10k to 0) and the resistance between B and C increases (from\n0 to 10k).\n\n### Servomotor\n\n``` photo ```(photo)\n\nA servomotor is an active component that is able of turning its arm precisely.\nThe servomotor included in the kit is able to turn from 0 degrees to 180 degrees. In\norder to control its movement, you have to send it a PWM signal. However, you do\nnot have to worry as there is a library built in the Arduino IDE that is used to control\nservos.\n\n\n## Connections\n\nBelow, you can find the schematic:\n\n``` photo ```(photo)\n\nIn the next diagram we have as main elements the potentiometer and the servomotor.\n\nThe potentiometer is an adjustable resistor, the middle pin is connected to a pin of the board to read the resistance value. The other 2 pins are connected to ground and voltage. \n\nThe red pin of the actuator is connected to voltage, the brown one is connected to ground and the orange one is connected to one of the pins of the board to send signals to the actuator.\n\nBelow, you can find the visual representation:\n\n``` photo ```(photo)\n\n\n## Code","code":"","error":"","result":""},{"id":"753946ff-6060-4552-a9cf-7ba5d0728350","type":"markdown","editable":false,"data":"### Import libraries\nFirst, we import libraries to later use the functions and variables predefined in them.","code":"","error":"","result":""},{"id":"94991776-9254-4e76-9cb4-c62e949ba567","type":"python","editable":false,"data":"#use these libraries to declare used pins and PWM\nfrom machine import Pin, ADC, PWM\n#for delay\nfrom time import sleep","code":"","error":"","result":""},{"id":"ff580141-2c80-40e7-85da-401a0266823c","type":"markdown","editable":false,"data":"\n### Define variables\nUse the ADC pin for read values between 0 and 1024 who is generated from potentiometer.","code":"","error":"","result":""},{"id":"a87b811c-7048-4669-b2ac-2e492a957917","type":"python","editable":false,"data":"#use the ADC pin for read values between 0 and 1024 who is generated from potentiometer\npot = ADC(0)","code":"","error":"","result":""},{"id":"9422f169-a540-4093-a897-7cba30eaf51d","type":"markdown","editable":false,"data":"We define the pin as OUTPUT and the PWM of the servo.","code":"","error":"","result":""},{"id":"7dd56775-b743-40e1-8ac2-8eb688ea2f8b","type":"python","editable":false,"data":"#define the pin as OUTPUT and the PWM of the servo \nservo = PWM(Pin(5, Pin.OUT) , freq = 100)","code":"","error":"","result":""},{"id":"5c1e0c87-2645-44e8-963e-044feb9a5436","type":"markdown","editable":false,"data":"### Infinite loop\n\nWe will create an infinite loop ('while True') for the board to execute the instructions continuously.\n\nIn the this while loop we declare a new variable where we read from ADC pin (A0) and send the value to servo motor .","code":"","error":"","result":""},{"id":"434f3ab7-df26-4b02-b165-0db80c7c156a","type":"python","editable":false,"data":"#for board execute the instructions continuously we make an infinite loop\nwhile True:\n  #declare a new variable where we read from ADC pin (A0)\n  pot_value = pot.read()\n  \n  #send the value to servo motor \n  servo.duty(pot_value)\n","code":"","error":"","result":""}]