[{"id":"a2facd99-43fb-40db-82dc-36a7fb40a9f1","type":"markdown","editable":false,"data":"# **Lesson 1: Blink an LED**\n\n## 1.1 Overview\nIn this lesson you will learn how to use a breadbord, how to place\ncomponents on it and how to control an LED.\n## 1.2 Components required\n* Development board;\n* 1 x LED;\n* 1 x 150 Ω resistor;\n* Breadboard 830p;\n* 2 x male-to-male jumper wires;\n* Micro USB – Type A USB Cable;\n\n## 1.3 Component Introduction\n\n### ➢ Breadboard 830p\n#TODO img breadboard\n\nA breadboard enables you to prototype circuits quickly, without having to\nsolder the components together. There are multiple types of breadboards that differ in\nsize and configuration, but the breadboard included in this kit has 830 points.\n\nA breadboard consists of a block of plastic with multiple holes. Inside the\nblock there are strips of metal that provide electrical connection between holes.\nWhile a breadboard is very good for prototypes as you can simply insert a\ncomponent into it in order to have a connection. Sometimes these connections are\nnot very stable and can make components work improperly.\nA picture with a similar breadboard included in the kit can be seen below.\n\nOn the edges (area A and D) there are the rails. They are used to provide\npower and have suggestive colours: blue for ground and red for VCC. Please note that\nthe blue and red lines are not connected between them.\n\nIn the middle (area B and C), the space is used to mount components such as\nLED, sensors, resistors etc. A deep channel running down the middle indicates that\nthere is a break in connections there, meaning that you can push a chip in with the\n\n#TODO img2 breadvoard\nlegs at either side of the channel without connecting them together.\n\n### ➢ Light Emitting Diode\nAn Light Emitting Diode (LED) is a component used to provide visual\nfeedback, as they use very little electricity (about 15-30 mA for a standard 5 mm LED)\nand they can last forever (unless you burn them). One of the most common type of\nLED is the 5mm red LED. The size of 5 mm refers to the diameter of the LED, and red\nrepresents the colour it emits when it is powered.\n\nAn LED is always used with a resistor in series in order to limit the amount\nof current flowing through it, as otherwise it will burn out and you can't repair it. The\nformula to calculate the resistance needed is the following:  \n#TODO img cu formula R=Vcc−V LED / ILED\n\n* Vcc is the supply voltage (this development board has only 3.3V outputs)\n* VLED is the LED forward voltage (2 V for red, 2.1 V for green, 3.2 V for blue)\n* ILED is the LED forward curent (15 mA for red, 20 mA for green, 25 mA for\nblue)\n\n**Example**: Let's say that you want to power a green led from 3.3 V. The led\nhas the forward voltage of about 2.1 V and the forward current of about 10 mA (max\ncurrent on each pin of the board is 12mA). The resistor required has the following\nvalue:\nR=(3.3V−2.1V) /10⋅10^−3 A\n= 1.2V/10⋅1^0−3 A\n=120Ω ----------------------------------\n\nSo, the required resistor needs to have a resistance of 120 Ω. Sometimes, you\nwon't find the desired resistance and it is recommended to pick a resistor with a\nhigher resistance. In this case, you should pick a 150 Ω.\n\n**IMPORTANT!** When you power an LED, the polarity matters. It means you\nhave to correctly identify the anode (positive lead of the LED) and the cathode\n(negative lead of the LED). Depending on the LED used, there are multiple ways to\ndetermine how to power it:\n\n* If the leads don't have the same length, it means that the longer one is the\nanode (positive terminal) and the shorter one is cathode (negative terminal)\nas shown below.\n* If the leads have the same length, you have to check the body of the LED as\nthere is a flat edge and that is the place where the negative lead enters into\nthe body, as shown below.\n\n#TODO imgs cu led-uri pg 29\n\n### ➢ Resistor\nA resistor is a passive two-terminal electrical component that is used to\nreduce the current flow, adjust signal levels, divide voltages, etc. The higher the value\nof the resistor, the less current will flow through it. Unlike the LEDs, resistors don't\nhave polarity so you can connect them either way around.\n\nThe unit of resistance is called **OHM**, which is usually shortened to Ω (the\nGreek letter Omega). Sometimes, you can see another other latin letter next to the Ω,\nsuch as kΩ (1kΩ = 1,000Ω) or MΩ (1MΩ = 1,000kΩ = 1,000,000Ω).\n\nIn schematics, there are two common ways to represent a resistor: US style\nand EU style. Below you have an example.\n#TODO img pg 30\n\nMost of the resistors have the same body, so it is useful to know how to\ndetermine the value of a resistor. There are 2 ways:\n\n* You can simply use a multimeter to measure the resistance, then to\napproximate to the closest common value.\n* You can decode the pattern printed on them.\n\n#TODO img resistors pg 31\n\n## 1.4 Connection\nIn order to blink an LED, you have to connect the negative terminal (please\ncheck above to see how to determine it) to a **GND** pin of the development board, and\nthe positive terminal to a digital pin. In this example, we are going to use D6, as\nshown below.\n\n#TODO img sus 32\n\nNext, you can see a visual representation of how to connect the LED to the\nbreadboard and development board.\n\n#TODO img fritzing\n\nThe board runs at 3.3 V, which is enough to power the LED. In order to power\nthe board, you have to plug the USB cable to a computer or to a travel adapter. It has\nan onboard 3.3 V regulator, which lowers the voltage from 5 V to 3.3 V. The resistor is\npicked accordingly to the equation presented before (check the Resistor section). The\nrequired resistance is about 120 Ω, but we are going to pick a 150 Ω resistor as the\n120 Ω is not a common value.\n","code":"","error":"","result":""},{"id":"e35e0042-cde0-4e98-9454-356ca2e5cd0f","type":"markdown","editable":false,"data":"## 1.5 Code\n*First step is to import the libraries.* \nThe first line imports from the \"machine\" module the \"Pin\". It will create an Pin object.\nThe second line imports from the \"time\" module sleep\n\nMore informations:\n* https://docs.micropython.org/en/latest/library/machine.Pin.html\n* https://docs.micropython.org/en/v1.5/pyboard/library/time.html","code":"","error":"","result":""},{"id":"b77c9d86-f412-4a55-ad71-ecb91095c9f3","type":"python","editable":false,"data":"# Blink an LED\n\nfrom machine import Pin\nfrom time import sleep","code":"","error":"","result":""},{"id":"dd4a41d4-7b1c-46b1-803b-d5b35f739e2f","type":"markdown","editable":false,"data":"*Next step is the declaration of two variables*, one to store the pin used by the LED,\r\nand another to store the time in milliseconds","code":"","error":"","result":""},{"id":"a8d992fe-cf36-47f5-b79e-d2de850fc8ba","type":"python","editable":false,"data":"#the variable \"LED\" stores the pin used by the LED\n#Parameters for Pin:\n#first parameter can be one of the 9 available on the board (from D0-D8)\n#15 represents GPIO15 as D8 on the board\n#second parameter Pin.OUT set variable LED as OUTPUT\nLED = Pin(15, Pin.OUT)","code":"","error":"","result":""},{"id":"4d1bc627-7329-4b44-b073-08beaeb4a789","type":"python","editable":false,"data":"#the int variable \"delayTime\" stores the time (in this case in seconds) between the blinks\r\ndelayTime = 1","code":"","error":"","result":""},{"id":"93061fab-572a-4ed1-9c58-927f826adc1e","type":"markdown","editable":false,"data":" *Further, the next four instructions are used to actually turn the LED on and off.*\r\nChanging the state of the led is done with the instruction value(state).\r\nState can be either ON (1) or OFF (0). sleep(time) stops the code for a certain\r\nperiod of time.\r\n \r\n In order to turn on/off the LED, you have to use the value\r\n 0 for OFF and 1 for ON","code":"","error":"","result":""},{"id":"1bbfe23f-5111-43d5-9e59-2772db26b790","type":"python","editable":false,"data":"#the next two instructions are used to turn off the LED and wait for 1 second\r\nLED.value(0)\r\nsleep(1)","code":"","error":"","result":""},{"id":"224c02da-7fea-48df-b6b3-ee8d9cfd4312","type":"python","editable":false,"data":"#the next two instructions are used to turn on the LED and wait for 1 secon\r\nLED.value(1)\r\nsleep(1)","code":"","error":"","result":""},{"id":"c58e5e7b-4544-4a1c-90e8-8e5ae8d55fa9","type":"markdown","editable":false,"data":"Next step is to gently connect the development board to the computer via the\r\nincluded micro USB cable. There is only one way to plug it in, so do not use force to\r\ninsert the cable.\r\n\r\n#TODO cum compilezi","code":"","error":"","result":""},{"id":"584a349f-c424-43eb-b4e4-506f2fedccfa","type":"markdown","editable":false,"data":"\r\nAfter you get the confirmation message, you can check if the LED is blinking.\r\nDuring the uploading process, you can see the other led blinking very fast.\r\n\r\nCongratulations! You have just completed your very first tutorial. You have\r\njust learned how to upload code to a development board and how the code is\r\nstructured.","code":"","error":"","result":""}]