[{"id":"92d50991-7fb6-4e90-954d-ec887ea5248b","type":"markdown","editable":true,"data":"# Lesson 3: RGB LED\n\n## 3.1 Overview\n\n**RGB LEDs** are pretty similar to the LEDs used in the last lesson, but they\nlight multiple colours, rather than one. Basically, an RGB LED consists of 3 LEDs.\nRGB stands for **R**ed, **G**reen and **B**lue. Using these 3 colours, you can create almost\nany colour. They mostly come in 2 versions: common anode or common cathode. The\ncommon pin is usually the longest one.\n\n**NOTE!** Try not to mistake the common anode for common cathode LEDs as\nit is very difficult to identify them.\n\nThey have either a common anode or a common cathode in order to reduce\nthe pins used, from 6 pins to just 4 pins. The common anode means that one positive\nline (usually 3.3 V or 5 V) is used by all LEDs. On the other hand, the common\ncathode means that the one ground line is shared by all LEDs.","code":"","error":"","result":""},{"id":"48e9eba5-6d94-4446-9158-333c5871895a","type":"markdown","editable":false,"data":"## 3.2 Components required\n\n* Development board\n* 4 x male-male jumper wires\n* 3 x 150 Ω resistors\n* 1 x RGB LED\n\n## 3.3 Components introduction\n### RGB LED\n\nAt first sight, an RGB LED looks pretty similar to a regular LED. However,\ninside the body, there are 3 LEDs: red, green and blue. By adjusting the brightness of\nthese 3 LEDs, you can get almost any colour.\n\nAdjusting the brightness can be done in two ways:\n\n* Using resistors of different resistance. ?????????\n\nBy limiting the current flowing through each LED, you can get different\ncolours. This method is not recommended as you need to have multiple resistors and\nto intensively test in order to get the desired colour.\n\n* Using the **Pulse Width Modulation (PWM)** technique.\n\nThe main advantage of this method is that you don't need to change the\nresistors in order to modify the brightness of the LED. The development board\nincluded in the kit has 8 digital pins capable of PWM (D1 – D8).\n\nHere is a representation that helps you identify the terminal corresponding\nthe each colour:\n\n#TODO img RGB pg 44\n\nIn schematics, it is represented as follows:\n\n#TODO img RGB pg 44\n\n","code":"","error":"","result":""},{"id":"53cb376f-2eb7-4d3b-a254-0324d386dc9d","type":"markdown","editable":false,"data":"# 3.4 Theory\n### Colour\nThe reason that you can mix these 3 colours (red, green, blue) in order to get\nany colour is that our eyes have three types of light receptors (red, green, blue). By\nprocessing the brightness of these 3 colours, our brain associate it with a colour of\nthe visible spectrum. The same technique is used in LCD TVs or smartphones.\n\n#TODO img pg 45\n\n# 3.5 Connection\n\nHere is the schematic:\n\n#TODO imgs pg 45\n","code":"","error":"","result":""},{"id":"54c89381-5b7c-485a-bc94-a978d02d1473","type":"markdown","editable":false,"data":"## 3.6 Code\nThe code is pretty similar to the one included in the previous two lessons, but\nthis time we will use an RGB LED, resulting in working with three LEDs. Also in this\ncode we have created our own functions, so you will learn how to do that.\n\nIn order to create a function, you have to know some basic things. Below, you\ncan find a picture that shows the core of a function. It must have a type, a name, and\ncode. The parameters are optional.\n\n#TODO img functie python + exemplru functie suma","code":"","error":"","result":""},{"id":"cb914148-fb15-453c-9865-4507bfabf942","type":"markdown","editable":false,"data":"*First step is to import the libraries.* \nThe first line imports from the \"machine\" module the \"Pin\" (It will create an Pin object.) and \"PWM\"(It will create an PWM object with frequency and suty cycle). \nThe second line imports from the \"time\" module sleep\n\nMore informations:\n* https://docs.micropython.org/en/latest/esp8266/tutorial/pwm.html\n","code":"","error":"","result":""},{"id":"00ceb9a0-7432-4f91-9c25-f5c4119b7a34","type":"python","editable":false,"data":"# #RGB\r\n\r\nimport time\r\nfrom machine import Pin, PWM","code":"","error":"","result":""},{"id":"704b3564-28dd-4ccc-a913-485c9e8f6dff","type":"markdown","editable":false,"data":"Next step is the declaration ot three variables that stores the pins\r\nused by the RGB LED. \r\n\r\nThe pins are setting as OUTPUT and the PWM module feature to fade RGB.\r\n","code":"","error":"","result":""},{"id":"d5e4937c-0740-49ea-84a9-936b18994be3","type":"python","editable":false,"data":"#set the 3 variables for each color\r\nblue = PWM(Pin(14, Pin.OUT))\r\ngreen = PWM(Pin(12, Pin.OUT))\r\nred = PWM(Pin(13, Pin.OUT))","code":"","error":"","result":""},{"id":"3b24a889-3f63-4b9a-a5fd-3919c5ff966e","type":"markdown","editable":false,"data":"We will create 3 functions to fade one LED, two LEDs and three LEDs. The\r\nfirst function will fade just one LED and it contains a for loop, the same as the first\r\nfor loop from the code from the previous lesson.","code":"","error":"","result":""},{"id":"8cce0f36-03c6-458f-a67f-8fab343e2b96","type":"python","editable":false,"data":"#create an function for one color with one parameter\r\n#we will use the PWM from the previous example for setting the brightness \r\ndef single(led):\r\n    #PWM is generated using 10 bits, so it ranges between\r\n    #0 and 1023 (2^10 = 1024)\r\n    for fade in range(0,1024):\r\n        #set the brightness of the LED using duty()\r\n        led.duty(fade)\r\n        #wait for 3 milliseconds\r\n        time.sleep_ms(3) \r\n        \r\n    for fade in range(1023,-1, -1):\r\n        #set the brightness of the LED using duty()\r\n        led.duty(fade)\r\n        #wait for 3 milliseconds\r\n        time.sleep_ms(3)","code":"","error":"","result":""},{"id":"2716e1ec-114b-426b-b822-3a9a7812a903","type":"markdown","editable":false,"data":"Another function created is used to fade 2 LEDs at a time. The function is\r\nsimilar with the single function, but we need to add in the for loop another\r\nduty(fade) for the second LED, and also turn off the LED at the end of the\r\nfunction.","code":"","error":"","result":""},{"id":"96a1f207-a468-40cc-8a23-eea37e33f493","type":"python","editable":false,"data":"#create an function for two colours with two parameters\r\ndef duo(led1, led2):\r\n    for fade in range(0,1024):\r\n        #set the brightness of the LED using duty()\r\n        led1.duty(fade)\r\n        led2.duty(fade)\r\n        #wait for 3 milliseconds\r\n        time.sleep_ms(3) \r\n        \r\n    for fade in range(1023,-1, -1):\r\n        #set the brightness of the LED using duty()\r\n        led1.duty(fade)\r\n        led2.duty(fade)\r\n        #wait for 3 milliseconds\r\n        time.sleep_ms(3)","code":"","error":"","result":""},{"id":"ee1f9e83-039a-469f-b537-af0b00d95cf8","type":"markdown","editable":false,"data":"The third new function is the one used to dim all the LEDs. This function is\r\nalso similar with the previous ones, all we need to to is to add another duty(fade)\r\ncall for the third LED to control its brightness.","code":"","error":"","result":""},{"id":"5ef8f962-0282-4a74-ba3c-6ad610a851d3","type":"python","editable":false,"data":"#create an function for two colours with two parameters \r\ndef all(led1, led2, led3):\r\n    for fade in range(0,1024):\r\n        #set the brightness of the LED using duty()\r\n        led1.duty(fade)\r\n        led2.duty(fade)\r\n        led3.duty(fade)\r\n        #wait for 3 milliseconds\r\n        time.sleep_ms(3)\r\n        \r\n    for fade in range(1023,-1, -1):\r\n        #set the brightness of the LED using duty()\r\n        led1.duty(fade)\r\n        led2.duty(fade)\r\n        led3.duty(fade)\r\n        #wait for 3 milliseconds\r\n        time.sleep_ms(3)","code":"","error":"","result":""},{"id":"aed243c3-b701-4672-89d9-8bc6acffc48d","type":"markdown","editable":false,"data":"Final step is to call all the functions we have\r\njust created. Firstly, the single function will be called three times, because this\r\nfunction will control each individual LED, the duo function will be called also three\r\ntimes to combine two colours at a time and the all function will be called only one\r\ntime because it controls all the three LEDs of the RGB LED.","code":"","error":"","result":""},{"id":"8be2dcb6-28ad-4705-b2e4-8447bab6d72c","type":"python","editable":false,"data":"#turn on the LEDs one by one        \r\nsingle(red)\r\nsingle(blue)\r\nsingle(green)","code":"","error":"","result":""},{"id":"45d380fb-11b9-4fec-bbb7-8bb82bcc558e","type":"python","editable":false,"data":"#turn on LEDs two by two\r\nduo(red, blue)\r\nduo(red, green)\r\nduo(green, blue)","code":"","error":"","result":""},{"id":"a09181f9-3928-4c15-9bfb-a526014bc0f9","type":"python","editable":false,"data":"#turn on all 3 LEDs\r\nall(red, blue, green)","code":"","error":"","result":""}]