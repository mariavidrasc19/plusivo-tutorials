[{"id":"698c4e17-216f-463f-8464-d5e46300ab2c","type":"markdown","editable":false,"data":"\n# Lesson 2: Dim an LED\n\n## Overview\n\nIn this lesson you will learn how to control the brightness of an LED.\n\n## Components required\n\n* Development board;\n* 1 x LED;\n* 1 x 150 Ω resistor ;\n* Breadboard 830p;\n* 2 x male-to-male jumper wire;\n* Micro USB – Type A USB Cable;\n\n\n## Theory\n### Pulse Width Modulation (PWM)\n    \n   PWM is a modulation technique used to control the speed of motors or the\nbrightness of LEDs. PWM creates a square wave by switching between on and off.\n   The value that characterizes the PWM is the Duty Cycle. It represents the\nduration in which the voltage is kept on. For example, 25% duty cycle means that 25%\nof the period the voltage is high and 75% of the period the voltage is low. The PWM\nfrequency is about 1000 Hz, so the period is about 1 ms.\n   The duty cycle can be set using the instruction \"pwm.duty(value)\".The variable \"pwm\" \nis previously declared as such \"pwm = PWM(LED)\" and the \"value\" is stored on 10 bits, \nso 0 coresponds to 0% duty cycle and 1023 coresponds to 100% duty cycle.\n\n\n## Connection\n\nYou have to connect the negative terminal to a GND pin of the development board, and\nthe positive terminal to a digital pin. In this example, we are going to use D6, as\nshown below.\n    \n  ``` photo ```(photo)\n\nBelow, you can find a visual representation of the connections:\n\n  ``` photo ```(photo)\n\nThe board runs at 3.3 V, which is enough to power the LED. In order to power\nthe board, you have to plug the USB cable to a computer or to a travel adapter. It has\nan onboard 3.3 V regulator, which lowers the voltage from 5 V to 3.3 V. The resistor is\npicked accordingly to the equation presented before (check the Resistor section). The\nrequired resistance is about 120 Ω, but we are going to pick a 150 Ω resistor as the\n120 Ω is not a common value.\n\n\n## Code\n\n    ","code":"","error":"","result":""},{"id":"2b1d7932-da3b-4700-b21c-9f33a46190cf","type":"markdown","editable":false,"data":"\n### Import libraries\nFirst, we import libraries to later use the functions and variables predefined in them.","code":"","error":"","result":""},{"id":"bb24e147-0d84-4d4e-8c9f-e1b2c6494cb2","type":"python","editable":false,"data":"#use these libraries to declare used pins and PWM\nfrom machine import Pin, PWM\n#use these libraries for delay\nfrom time import sleep","code":"","error":"","result":""},{"id":"586b8b68-08ca-4c4d-b2b8-4176968628eb","type":"markdown","editable":false,"data":"\n### Declaring variables\nWe declare the variables used with the corresponding pins. We declare the LED as the output pin ('Pin.OUT') and we will look at the pin diagram and notice \nthat pin D6 is GPIO**12**.\nWe also declare the pwm for LED to create fluctuating energy.\n","code":"","error":"","result":""},{"id":"83a2a73a-d744-4c06-9506-1f0a9e196d14","type":"python","editable":false,"data":"\n#first, define the pins used by the led\nLED = Pin(12, Pin.OUTPUT) #D6\n#and the pwm for led\npwm = PWM(LED)","code":"","error":"","result":""},{"id":"343d7370-2362-4e6b-81ed-125ebe0cf777","type":"markdown","editable":false,"data":"\n### Infinite loop\n\nWe will create an infinite loop for the board to execute the instructions continuously.\n\nIn the this while loop we will use the duty cycle; to set the brightness on the LED. \n    \nThe value can be from 0 (0% duty cycle, which means that the LED is off) to 1023 (100% duty cycle and the LED will be at maximumbrightness).\n\nUsing a for loop we will set the value from 0 to 1023 with a delay of 2 milliseconds to have time to see the fading.\nAlso we are using another for loop to set the value from 1023 to 0 with a delay of 2 milliseconds. \n    \nThe first for loop is used to set the brightness of the LED from 0% to 100%, and the second is used to set the brightness from 100% to 0%.","code":"","error":"","result":""},{"id":"8efd33b1-af8f-40aa-b9d0-d8bc98bf0551","type":"python","editable":false,"data":"#for board execute the instructions continuously we make an infinite loop\nwhile True:\n    #PWM is generated using 10 bits, so it ranges between\n    #0 and 1023 (2^10 = 1024)\n    for fade in range(0, 1024):\n        #set the brightness of the LED using duty cycle\n        pwm.duty(fade)\n        #wait 0.005 seconds\n        sleep(0.005)\n    #keep the LED at the maximum brightness for 500 ms  \n    sleep(0.05)\n    \n    #we reduce the intensity of the led\n    for fade in range(1024, -1, -1):\n        #set the brightness of the LED using duty cycle\n        pwm.duty(fade)\n        #wait 0.005 seconds\n        sleep(0.005)","code":"","error":"","result":""}]